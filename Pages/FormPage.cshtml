@page
@using System.Web
@model FormPageModel
@section Styles {
    <link rel="stylesheet" href="~/css/form.css" />
}

@{
    ViewData["Title"] = "Žiadosť o zamestnanie";
}

<h2>Žiadosť o zamestnanie</h2>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
        <script type="text/javascript" src="https://www.slovensko.sk/static/zep/dbridge_js/v1.0/config.js"></script>
        <script type="text/javascript"
            src="https://www.slovensko.sk/static/zep/dbridge_js/v1.0/dCommon.min.js"></script>
        <script type="text/javascript"
            src="https://www.slovensko.sk/static/zep/dbridge_js/v1.0/dSigXades.min.js"></script>
        <script type="text/javascript"
            src="https://www.slovensko.sk/static/zep/dbridge_js/v1.0/dSigXadesBp.min.js"></script>
        <script type="text/javascript"
            src="https://www.slovensko.sk/static/zep/dbridge_js/v1.0/dSigXadesExtender.min.js"></script>

<form method="post">
    <fieldset>
        <h3>Zamestnávateľ:</h3>
        <div class="flex-container name-group">
            <div class="form-group">
                <label for="fullName">Meno:</label>
                <input type="text" id="fullName" asp-for="employer.personInfo.FullName" class="form-control" />
                <span asp-validation-for="employer.personInfo.FullName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="degree">Titul:</label>
                <input type="text" id="degree" asp-for="employer.personInfo.Degree" class="form-control" />
            </div>
        </div>

        <div class="flex-container employer-info-group">
            <div class="form-group">
                <label for="legalForm">Legal Form:</label>
                <input type="text" id="legalForm" asp-for="employer.LegalForm" class="form-control" />
                <span asp-validation-for="employer.LegalForm" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="ico">IČO:</label>
                <input type="text" id="ico" asp-for="employer.ICO" class="form-control" />
                <span asp-validation-for="employer.ICO" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="dic">DIČ:</label>
                <input type="text" id="dic" asp-for="employer.DIC" class="form-control" />
                <span asp-validation-for="employer.DIC" class="text-danger"></span>
            </div>
        </div>

        <h5>Sídlo spoločnosti:</h5>
        <div class="flex-container first-row">
            <div class="form-group">
                <label for="city">Obec:</label>
                <input type="text" id="city" asp-for="employer.address.City" class="form-control" />
                <span asp-validation-for="employer.address.City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="cityDistrict">Časť obce:</label>
                <input type="text" id="cityDistrict" asp-for="employer.address.CityDistrict" class="form-control" />
            </div>
        </div>
        <div class="flex-container second-row">
            <div class="form-group">
                <label for="street">Ulica:</label>
                <input type="text" id="street" asp-for="employer.address.StreetName" class="form-control" />
                <span asp-validation-for="employer.address.StreetName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="streetNumber">Číslo:</label>
                <input type="number" id="streetNumber" asp-for="employer.address.StreetNumber" class="form-control" />
                <span asp-validation-for="employer.address.StreetNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="zipCode">PSČ:</label>
                <input type="text" id="zipCode" asp-for="employer.address.ZipCode" class="form-control" />
                <span asp-validation-for="employer.address.ZipCode" class="text-danger"></span>
            </div>
        </div>

        <h5>Kontakt:</h5>
        <div class="flex-container contact-group">
            <div class="form-group">
                <label for="phone">Telefonné číslo:</label>
                <input type="text" id="phone" asp-for="employer.contact.Phone" class="form-control" />
                <span asp-validation-for="employer.contact.Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="email">Emailová adresa:</label>
                <input type="email" id="email" asp-for="employer.contact.Email" class="form-control" />
                <span asp-validation-for="employer.contact.Email" class="text-danger"></span>
            </div>
        </div>
    </fieldset>

    <fieldset>
        <h3>Záujemca:</h3>
        <div class="flex-container name-group">
            <div class="form-group">
                <label for="fullName">Meno:</label>
                <input type="text" id="fullName" asp-for="candidate.personInfo.FullName" class="form-control" />
                <span asp-validation-for="candidate.personInfo.FullName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="degree">Titul:</label>
                <input type="text" id="degree" asp-for="candidate.personInfo.Degree" class="form-control" />
            </div>
        </div>

        <h5>Adresa trvalého pobytu:</h5>
        <div class="flex-container first-row">
            <div class="form-group">
                <label for="city">Obec:</label>
                <input type="text" id="city" asp-for="candidate.address.City" class="form-control" />
                <span asp-validation-for="candidate.address.City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="cityDistrict">Časť obce:</label>
                <input type="text" id="cityDistrict" asp-for="candidate.address.CityDistrict" class="form-control" />
            </div>
        </div>
        <div class="flex-container second-row">
            <div class="form-group">
                <label for="street">Ulica:</label>
                <input type="text" id="street" asp-for="candidate.address.StreetName" class="form-control" />
                <span asp-validation-for="candidate.address.StreetName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="streetNumber">Číslo:</label>
                <input type="number" id="streetNumber" asp-for="candidate.address.StreetNumber" class="form-control" />
                <span asp-validation-for="candidate.address.StreetNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="zipCode">PSČ:</label>
                <input type="text" id="zipCode" asp-for="candidate.address.ZipCode" class="form-control" />
                <span asp-validation-for="candidate.address.ZipCode" class="text-danger"></span>
            </div>
        </div>

        <h5>Kontakt:</h5>
        <div class="flex-container contact-group">
            <div class="form-group">
                <label for="phone">Telefonné číslo:</label>
                <input type="text" id="phone" asp-for="candidate.contact.Phone" class="form-control" />
                <span asp-validation-for="candidate.contact.Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="email">Emailová adresa:</label>
                <input type="email" id="email" asp-for="candidate.contact.Email" class="form-control" />
                <span asp-validation-for="candidate.contact.Email" class="text-danger"></span>
            </div>
        </div>
    </fieldset>
    <fieldset>
        <div>
            <label for="startDate">Dátum nástupu:</label>
            <input type="date" id="startDate" asp-for="StartDate" class="form-control" />
            <span asp-validation-for="StartDate" class="text-danger"></span>
        </div>
        <div>
            <label for="AttachmentsString">Prílohy (oddelené čiarkou):</label>
            <input type="text" id="AttachmentsString" asp-for="AttachmentsString" class="form-control" placeholder="e.g., Attachment1, Attachment2" />
        </div>
    </fieldset>
    <div class="flex-container">
        <button type="submit" name="action" value="save" class="btn btn-primary mt-3">Ulož</button>
        <button type="submit" name="action" value="check" class="btn btn-primary mt-3">Kontrola</button>
        <button type="submit" name="action" value="export" class="btn btn-primary mt-3">Export do HTML</button>
        <button id="sign" class="btn btn-primary mt-3" onclick="executeScript()">Podpísať</button>
        <button id="timestamp" name="action" value="timestamp" class="btn btn-primary mt-3">Časová pečiatka</button>
    </div>
</form>

<div class="mt-4">
    <h3>Validation Result</h3>
    <p class="text-success">@Model.ValidationResult</p>
</div>

<script>
        @{
            var base64Content = SIPVS.LoadPdf.LoadFileAsBase64("example.pdf");
            var encodedBase64Content = HttpUtility.UrlEncode(base64Content);
        }
</script>

<script>

function Callback(onSuccess) {
    this.onSuccess = onSuccess;
    this.onError = function (e) {
        alert("Chyba: " + e);
        };
}

async function executeScript() {
    
    var xmlData = await loadXML();
    var xsdData = await loadXSD();
    var xslData = await loadXSL();
    var encodedBase64Content= '@encodedBase64Content';


    ditec.dSigXadesBpJs.deploy(null, new Callback(function () {
        ditec.dSigXadesBpJs.initialize(new Callback(function () {
            ditec.dSigXadesBpJs.addPdfObject("objectID", "test_pdf", decodeURIComponent("@encodedBase64Content"), "", "http://example.com/pdf", 2, false, new Callback(function () {
                ditec.dSigXadesBpJs.addXmlObject("objectID2", "Ziadost o zamestnanie",'http://example.com/jobApplication', xmlData,'http://example.com/jobApplication',"1.0", xsdData,'http://example.com/jobApplication',xslData,'http://example.com/jobApplication','HTML',"http://www.w3.org/1999/XSL/Transform", "http://www.w3.org/1999/xhtml",false,"http://data.gov.sk/def/container/xmldatacontainer+xml/1.1", new Callback(function () {
                    ditec.dSigXadesBpJs.sign("signatureID", "http://www.w3.org/2001/04/xmlenc#sha256", "", new Callback(function () {
                        ditec.dSigXadesBpJs.getSignatureWithASiCEnvelopeBase64( new Callback(function (returned) {
                            const byteCharacters = atob(returned);
                            const byteNumbers = new Array(byteCharacters.length);
                            for (let i = 0; i < byteCharacters.length; i++) {
                                byteNumbers[i] = byteCharacters.charCodeAt(i);
                            }
                            const byteArray = new Uint8Array(byteNumbers);
                            const blob = new Blob([byteArray], { type: 'application/vnd.etsi.asic-e+zip' });
                            const link = document.createElement('a');
                            link.href = URL.createObjectURL(blob);
                            link.download = 'signed_jobapplication.asice';  
                            document.body.appendChild(link);
                            link.click();
                            document.body.removeChild(link);}))
                            }));
                        }));
                    }));
                }));
            }));
        }
    async function loadXML() {
        try {
            const response = await fetch('/output/jobApplication.xml');
            if (!response.ok) {
                throw new Error('Failed to load XML file.');
            }
            const xsdText = await response.text();
            console.log('XML Loaded:', xsdText);
            return xsdText;
        } catch (error) {
            console.error('Error loading XML:', error);
        }
    }

    async function loadXSD() {
        try {
            const response = await fetch('/schemas/jobApplication.xsd');
            if (!response.ok) {
                throw new Error('Failed to load XSD file.');
            }
            const xsdText = await response.text();
            console.log('XSD Loaded:', xsdText);
            return xsdText;
        } catch (error) {
            console.error('Error loading XSD:', error);
        }
    }

    async function loadXSL() {
        try {
            const response = await fetch('/schemas/transform.xsl');
            if (!response.ok) {
                throw new Error('Failed to load XSL file.');
            }
            const xslText = await response.text();
            console.log('XSL Loaded:', xslText);
            return xslText;
        } catch (error) {
            console.error('Error loading XSL:', error);
        }
    }
</script>